const{readdirSync,statSync,readdir,writeFileSync,readFile,existsSync}=require('fs'),{join}=require('path'),fs=require('fs'),path=require('path');var args=process.argv.slice(2).reduce((a,b)=>{let[c,e=!0]=b.split('=');return a[c]=e,a},{});if(!0===args['--help']||0===Object.keys(args).length)console.log('\x1B[38;2;63;81;181m',`
                     __                                           __      __
    ____  ____  ____/ /__        ____________________      ____  / /___  / /_
   / __ \\/ __ \\/ __  / _ \\______/ ___/ ___/ ___/ ___/_____/ __ \\/ / __ \\/ __ \\
  / / / / /_/ / /_/ /  __/_____(__  ) /__(__  |__  )_____/ /_/ / / /_/ / /_/ /
 /_/ /_/\\____/\\__,_/\\___/     /____/\\___/____/____/      \\__, /_/\\____/_.___/
                                                        /____/
`,'\x1B[0m'),console.log(`
node-scss-glob generates scss imports for entire folders.

USAGE:
    node-scss-glob -o=<file> [-d=<directory> -I=<directory> -e=<file> -E=<directory> -a]

OPTIONS:
  -o=FILE
      selects output file of globbed imports.
  -d=[DIRECTORY...]
      selects root directory to recursivly glob (brackets are required around the array, and not symbolic).
  -e=[FILE...]
      selects files to exclude from globbing (brackets are required around the array, and not symbolic).
  -E=[DIRECTORY...]
      selects folders to exclude from globbing (brackets are required around the array, and not symbolic).
  -a
      option to add imports onto previously globbed.
    `);else{function a(g,h,j,l,m){for(;g()!==h;)return l++,void setTimeout(function(){a(g,h,j,l,m)},j);m()}function c(g,h){let j=[];fs.readdir(g,function(l,m){if(l)return h(l);var n=m.length;return n?void m.forEach(function(o){o=path.resolve(g,o),fs.stat(o,function(q,r){r&&r.isDirectory()?c(o,function(s,t){j=j.concat(t),--n||h(null,j)}):(!excludeFiles.includes(path.relative(process.env.PWD,o))&&-1===excludeFiles.indexOf(o)&&!excludeFolders.includes(path.relative(process.env.PWD,o.substring(0,o.lastIndexOf('/')+1)))&&-1===excludeFolders.indexOf(o.substring(0,o.lastIndexOf('/')+1))&&function(){if(0<excludeFolders.length)for(i in excludeFolders)return-1===o.substring(0,o.lastIndexOf('/')+1).indexOf(excludeFolders[i]);else return!0}()&&j.push(o),! --n&&h(null,j))})}):h(null,j)})}if(existsSync(args['-o']))var outputfile=args['-o'];else console.error('\x1B[31m','FATAL ERR: Output file must be valid.  Exiting...','\x1B[0m'),process.exit(22);var dirnames=[];if(args['-d']===void 0||null===args['-d']||''===args['-d']||!0===args['-d'])dirnames.push(outputfile.substring(0,outputfile.lastIndexOf('/')+1));else var dirnames=args['-d'].replace('[','').replace(']','').split(',');if(void 0===args['-a']||null===args['-a']||''===args['-a'])var add=!1;else if(!0!==!!args['-a']&&!1!==!!args['-a']){console.error('\x1B[33m','WARN: Arguement \'add to previous\' needs to be a bolean, defaulting to false.','\x1B[0m');var add=!1}else var add=!!args['-a'];if(void 0===args['-e']||null===args['-e']||''===args['-e']||!0===args['-e'])var excludeFiles=[];else var excludeFiles=args['-e'].replace('[','').replace(']','').split(',');if(void 0===args['-E']||null===args['-E']||''===args['-E']||!0===args['-E'])var excludeFolders=[];else var excludeFolders=args['-E'].replace('[','').replace(']','').split(',');const e=g=>readdirSync(g).filter(h=>statSync(join(g,h)).isDirectory()&&-1===h.indexOf('_'));var d=[];for(i in dirnames)d.push(e(dirnames[i]));var importstring=['waiting'];var importstring2=[];for(f in dirnames)if(0!==e(dirnames[f]).length){var dirname=dirnames[f],wd=dirname;c(wd,function(g,h){for(var j in h)if(-1<h[j].indexOf('.scss')&&-1===h[j].indexOf(outputfile.substring(outputfile.lastIndexOf('/')+1).substr(1))){var l=path.relative(outputfile.substring(0,outputfile.lastIndexOf('/')+1),h[j]).replace('.scss','');if('/'===l.substr(0,l.indexOf('_')).slice(-1)||''===l.substr(0,l.indexOf('_')).slice(-1))var l=l.replace('_','');importstring.push('@import \''+l+'\';\n')}global.importstring=importstring,importstring=importstring.filter(m=>'waiting'!==m)})}else{var dirname=dirnames[f],files=readdirSync(dirname);files.forEach(g=>{var g=path.resolve(dirname,g);if(g.includes('.scss')&&-1===g.indexOf(outputfile.substring(outputfile.lastIndexOf('/')+1).substr(1))&&!excludeFiles.includes(path.relative(process.env.PWD,g))&&-1===excludeFiles.indexOf(g)&&!excludeFolders.includes(path.relative(process.env.PWD,g.substring(0,g.lastIndexOf('/')+1)))&&-1===excludeFolders.indexOf(g.substring(0,g.lastIndexOf('/')+1))&&function(){if(0<excludeFolders.length)for(i in excludeFolders)return-1===g.substring(0,g.lastIndexOf('/')+1).indexOf(excludeFolders[i]);else return!0}()){var h=path.relative(outputfile.substring(0,outputfile.lastIndexOf('/')+1),g).replace('.scss','');if('/'===h.substr(0,h.indexOf('_')).slice(-1))var h=h.replace('_','');importstring2.push('@import \''+h+'\';\n')}}),importstring=importstring.filter(g=>'waiting'!==g)}a(function(){return-1===importstring.indexOf('waiting')},!0,50,0,function(){readFile(outputfile,'utf8',function(g,h){if(g)return console.log(g);if(!1!=add)var j=h.substr(0,h.lastIndexOf('/*END AUTO GLOBBED*/'))+importstring.join('')+importstring2.join('')+h.substr(h.lastIndexOf('/*END AUTO GLOBBED*/'));else if(h.includes('/*START AUTO GLOBBED*/'))var j=h.replace(h.substring(h.lastIndexOf('/*START AUTO GLOBBED*/'),h.lastIndexOf('/*END AUTO GLOBBED*/')+20),'/*START AUTO GLOBBED*/\n'+importstring.join('')+importstring2.join('')+'/*END AUTO GLOBBED*/');else var j='/*START AUTO GLOBBED*/\n'+importstring.join('')+importstring2.join('')+'/*END AUTO GLOBBED*/'+h;console.log('\x1B[30;1m',j,'\x1B[0m'),writeFileSync(outputfile,j,{encoding:'utf8',flag:'w'},function(l){if(l)return console.log(l)})})})}
